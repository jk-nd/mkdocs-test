{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NOUMENA EVOKE","text":"<p>NOUMENA EVOKE is an complete tool set for enterprises to build and scale secure applications following a message-oriented and event-driven architecture.</p> <p>You can use NOUMENA EVOKE in 3 essential modes as a:</p> <ul> <li> <p>Business transasction engine and build and deploy banking-grade backends in minutes</p> </li> <li> <p>Gateway connect to existing systems, e.g., Web3, Core Banking, ERP, to authorize and orchestrate workflows amonst these systems </p> </li> <li> <p>Decentralised <code>NOUMENA NETWORK</code> node to build new decentralised applications rapidy with strong security and high scalability</p> </li> </ul> <p>At the core of NOUMENA EVOKE is the <code>NOUMENA RUNTIME</code> that acts as a permissioned runtime environment, equipped with <code>connectors</code> for easy integration, and <code>infrastrcuture code</code> for instant secure deployment. Head to Understanding EVOKE section for more details.</p> <p>For the technical documentation visit Noumena Documenation.</p>"},{"location":"#_1","title":"NOUMENA EVOKE","text":""},{"location":"Understanding%20EVOKE/1.%20Introduction/","title":"1. Introduction","text":""},{"location":"Understanding%20EVOKE/1.%20Introduction/#noumena-is-the-next-generation-of-software-development","title":"NOUMENA is the next generation of software development","text":""},{"location":"Understanding%20EVOKE/1.%20Introduction/#the-problem","title":"The problem","text":"<p>Enterprise software development is way too expensive.</p> <p>There are many recent improvements: shift left, cloud native development, microservices. But all still suffer from the same problem. Programming languages have not kept up with the times.</p> <p>Enterprise software has many requirements. Strong authorization guarantees. Strong privacy guarantees (reinforced by GDPR, CCPA, FADP etc). Audit trails. Metrics. Integration with various frontends. Integration with various backends.</p> <p>Traditionally solved by adding frameworks and layers, but those all rely on correct configuration and have associated maintenance costs.</p> <p>Once the software is running, it must be maintained as well. Outdated documentation. Overly complex implementations.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#the-solution","title":"The solution","text":"<p>NOUMENA is reinventing the way to develop enterprise software: NOUMENA Protocol Technology.</p> <p>The key idea is: pack the business data, the rules governing access to this data and the rules on how this data can be manipulated into one object: the NOUMENA Protocol.</p> <p>The NOUMENA Protocol securely binds together all the data, access and business rules (and only those) associated to any specific business process into an independently executable piece of software, a service. Every individual business process / event is associated with a unique and autonomous instance of such a service (or Protocol).</p> <p>TODO user centric design.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#introducing-the-noumena-architecture","title":"Introducing the NOUMENA architecture","text":""},{"location":"Understanding%20EVOKE/1.%20Introduction/#noumena-protocol-language","title":"NOUMENA Protocol Language","text":"<p>NPL is a revolutionary programming language that includes authorization as a first class citizen. Based on the notion of parties, permissions and obligations it provides an all-encompassing approach to writing secure, modern enterprise applications.</p> <p>NPL's explicit authorization-based modeling approach makes it a perfect fit for domain driven design to naturally match business reality and code. Its inclusion of finite state machines provides a natural fit for many business applications.</p> <p>Finally, NPL is designed to be transactional and deterministic, TODO blahblah advantage.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#noumena-operating-engine","title":"NOUMENA Operating Engine","text":"<p>NPL is compiled to bytecode and executed by the NOUMENA Runtime which is embedded in the NOUMENA Operating Engine. Whereas the runtime merely takes care of the execution, the Operating Engine takes care of everything around it, most notably OIDC-based authorization, straightforward data persistence.</p> <p>Because of the explicit structure NPL provides, the Operating Engine can provide various features that are hard to accomplish automatically in more traditional environments such as structured audit logging, partial independent verification and automated data anonymization</p> <p>Finally, the Operating Engine takes care of the entire application lifecycle management.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#deployment","title":"Deployment","text":"<p>Deployment -&gt; package NPL and Operating Engine together as a Docker image. Cloud-native deployment</p> <ul> <li>horizontal scaling, metrics, kubernetes, ...</li> </ul> <p>Requires a PostgreSQL database and an OIDC-compatible identity management system.</p> <p>Alternative: PaaS</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#systems-integration","title":"Systems integration","text":"<p>General: streaming, notifications to an AMQP-compatible queue or notifications for strongly authorized protocol-to-protocol communication</p> <p>For frontends: automated REST APIs.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#without-noumena","title":"Without NOUMENA","text":"<p>Without a technology like NOUMENA EVOKE, the building secure and scalable application  becomes extremely complex and fragile. Tens of thousands of lines of complex low-level \"plumbing\" code are required to ensuring proper authorization, data consistency, and another tens of thousands of custom \"middleware\" code are required to integrate the applications with third party systems such as the blockchain.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#noumena-network","title":"NOUMENA Network","text":"<p>Single NPL applications are amazing, but connecting multiple applications is even better. Using NPL enables all kinds of discoverability: allowing users to find their data, but also allowing system integrators to discover the structure of data.</p> <p>For applications that meet certain constraints, independent verification of calculations can be offloaded to NOUMENA verifier nodes.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#noumena-as-a-gateway-technology","title":"NOUMENA as a gateway technology","text":"<p>NOUMENA EVOKE provides enterprise developers a conveient middleware to connect to third party systems asynchronously. Leading examples are Web3, including all the blockchain ecosystems that they participate in.</p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#example-web3-gateway","title":"Example Web3 gateway","text":"<p>NOUMENA EVOKE is not a blockchain. Rather it is a pluggable API orchestration, data and authorization layer, integrating into all of the different types of decentralized technologies that exist in Web3:</p> <ul> <li>Blockchains, Layer 2 scaling solutions, Side chains, and App chains, decentralized storage solutions</li> <li>Smart Contracts, DeFi solutions and DAOs</li> <li>Decentral identity frameworks</li> </ul> <p>The NOUMENA runtime ensures client applications can submit authorized transactions to the blockchain and provides a data and business logic layer that synchronizes with the state from the blockchain. It automatically exposes fully authoriized APIs and event streams that are reliable, developer friendly and ready for enterprise use.</p> <p>With respect to web3 integrations, it plays a similar role as Hyperledger Firefly. </p>"},{"location":"Understanding%20EVOKE/1.%20Introduction/#why-use-noumena-evoke","title":"Why use NOUMENA EVOKE","text":"<p>Without a technology like NOUMENA EVOKE, the application layer becomes extremely complex and fragile. Tens of thousands of lines of complex low-level \"plumbing\" / \"middleware\" code are required to integrate the web3 infrastructure into the application. This code provides zero unique business value to the solution, but can consume a huge proportion of the engineering budget and maintenance cost if built bespoke within a solution.</p> <p>The <code>NOUMENA RUNTIME</code> acts as a permissioned runtime, equipped with <code>connectors</code> such as <code>blockchain-connector</code>, <code>RestAPI-connector</code>and others to allow for rapid integration. These connectors are available as part of <code>NOUMENA CLOUD</code>or can be contributed to NOUMENA developer libraries.</p> <p>The NOUMENA Protocol Language <code>NPL</code>can be used to</p> <ul> <li>Express authorization logic</li> <li>Documentation </li> <li>Code generation to create clients for various programming languages</li> </ul> <p>Example use cases are Web3 applications, SSI identiy cloud agents, AI agent. </p> <p>Next: Usage \u2192</p>"},{"location":"Understanding%20EVOKE/2.%20Comparison/","title":"2. Comparison","text":""},{"location":"Understanding%20EVOKE/2.%20Comparison/#comparison-with-hyperledger-firefly","title":"Comparison with Hyperledger Firefly","text":""},{"location":"Understanding%20EVOKE/2.%20Comparison/#adsf","title":"adsf","text":"Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"Understanding%20EVOKE/protocol_technology/","title":"NOUMENA Protocol Technology","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#introduction","title":"Introduction","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#overview","title":"Overview","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#the-problem","title":"The problem","text":"<p>Enterprise software development is way too expensive.</p> <p>There are many recent improvements: shift left, cloud native development, microservices. But all still suffer from the same problem. Programming languages have not kept up with the times.</p> <p>Enterprise software has many requirements. Strong authorization guarantees. Strong privacy guarantees (reinforced by GDPR, CCPA, FADP etc). Audit trails. Metrics. Integration with various frontends. Integration with various backends.</p> <p>Traditionally solved by adding frameworks and layers, but those all rely on correct configuration and have associated maintenance costs.</p> <p>Once the software is running, it must be maintained as well. Outdated documentation. Overly complex implementations.</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#the-solution","title":"The solution","text":"<p>NOUMENA is reinventing the way to develop enterprise software: NOUMENA Protocol Technology.</p> <p>The key idea is: pack the business data, the rules governing access to this data and the rules on how this data can be manipulated into one object: the NOUMENA Protocol.</p> <p>The NOUMENA Protocol securely binds together all the data, access and business rules (and only those) associated to any specific business process into an independently executable piece of software, a service. Every individual business process / event is associated with a unique and autonomous instance of such a service (or Protocol).</p> <p>TODO blahblah user centric design.</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#architecture","title":"Architecture","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#noumena-protocol-language","title":"NOUMENA Protocol Language","text":"<p>NPL is a revolutionary programming language that includes authorization as a first class citizen. Based on the notion of parties, permissions and obligations it provides an all-encompassing approach to writing secure, modern enterprise applications.</p> <p>NPL's explicit authorization-based modeling approach makes it a perfect fit for domain driven design to naturally match business reality and code. Its inclusion of finite state machines provides a natural fit for many business applications.</p> <p>The structure of NPL programs also enables automatically generated visualizations that are much more expressive than those derived from traditional programming languages. Such visualizations are invaluable when it comes to software maintenance.</p> <p>Finally, NPL is designed to be transactional and deterministic, TODO blahblah advantage.</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#noumena-operating-engine","title":"NOUMENA Operating Engine","text":"<p>NPL is compiled to bytecode and executed by the NOUMENA Runtime which is embedded in the NOUMENA Operating Engine. Whereas the runtime merely takes care of the execution, the Operating Engine takes care of everything around it, most notably OIDC-based authorization, straightforward data persistence.</p> <p>Because of the explicit structure NPL provides, the Operating Engine can provide various features that are hard to accomplish automatically in more traditional environments such as structured audit logging, partial independent verification and automated data anonymization</p> <p>Finally, the Operating Engine takes care of the entire application lifecycle management.</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#deployment","title":"Deployment","text":"<p>Deployment -&gt; package NPL and Operating Engine together as a Docker image. Cloud-native deployment</p> <ul> <li>horizontal scaling, metrics, kubernetes, ...</li> </ul> <p>Requires a PostgreSQL database and an OIDC-compatible identity management system.</p> <p>Alternative: PaaS</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#systems-integration","title":"Systems integration","text":"<p>General: streaming, notifications to an AMQP-compatible queue or notifications for strongly authorized protocol-to-protocol communication</p> <p>For frontends: automated REST APIs.</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#noumena-network","title":"NOUMENA Network","text":"<p>Single NPL applications are amazing, but connecting multiple applications is even better. Using NPL enables all kinds of discoverability: allowing users to find their data, but also allowing system integrators to discover the structure of data.</p> <p>For applications that meet certain constraints, independent verification of calculations can be offloaded to NOUMENA verifier nodes.</p>"},{"location":"Understanding%20EVOKE/protocol_technology/#use-cases","title":"Use cases","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#comparative-analysis","title":"Comparative analysis","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#future-development","title":"Future development","text":""},{"location":"Understanding%20EVOKE/protocol_technology/#references","title":"References","text":""}]}